package org.acme.repository;

import jakarta.enterprise.context.ApplicationScoped;
import jakarta.inject.Inject;
import org.acme.model.DTO.FuncionarioDTO;
import org.acme.model.Funcionario;

import javax.sql.DataSource;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
@ApplicationScoped
public class FuncionarioRepository {

    /*CREATE TABLE T_RHSTU_FUNCIONARIO(
    id_funcionario NUMBER GENERATED BY DEFAULT AS IDENTITY primary key,
    nm_funcionario VARCHAR(90),
    tp_funcionario  VARCHAR(90),
    ds_email_funcionario VARCHAR(100),
    ds_senha_funcionario VARCHAR(60)
    );
    */
    @Inject
    DataSource dataSource;

    public void inserirFuncionario(FuncionarioDTO funcionario) throws SQLException {
        String sqlI = "INSERT INTO T_RHSTU_FUNCIONARIO (nm_funcionario,tp_funcionario, ds_email_funcionario, ds_senha_funcionario) VALUES (?,?,?,?)";
        try (Connection con = dataSource.getConnection();
             PreparedStatement ps = con.prepareStatement(sqlI))
        {
            ps.setString(1, funcionario.getNome_funcionario());
            ps.setString(2,funcionario.getTipo_funcionario());
            ps.setString(3, funcionario.getEmail_funcionario());
            ps.setString(4, funcionario.getSenha_funcionario());

            ps.executeUpdate();
        }
        catch (SQLException e) {
            throw new SQLException();
        }
    }

    public List<Funcionario> RelatorioFuncionario(String email_f, String s_f) {
        String sql = "select * from T_RHSTU_FUNCIONARIO WHERE ds_email_funcionario=? AND ds_senha_funcionario=?";

        try (Connection con = dataSource.getConnection();
             PreparedStatement ps = con.prepareStatement(sql))
        {
            ps.setString(2,email_f);
            ps.setString(3,s_f);
            List<Funcionario> l = new ArrayList<>();
            try(ResultSet rs = ps.executeQuery()) {
                while (rs.next()) {
                    Funcionario funcionario = new Funcionario();
                    funcionario.setId_funcionario(rs.getInt(1));
                    funcionario.setNome_funcionario(rs.getString(2));
                    funcionario.setTipo_funcionario(rs.getString(3));
                    funcionario.setEmail_funcionario(rs.getString(4));
                    funcionario.setSenha_funcionario(rs.getString(5));

                    l.add(funcionario);
                }
                return l;
            }
        } catch (SQLException e) {
            throw new RuntimeException();
        }

    }
    public List<Funcionario> lista() throws SQLException{
        String sql="SELECT * FROM T_RHSTU_FUNCIONARIO ORDER BY id_funcionario";
        try(Connection con= dataSource.getConnection();
        PreparedStatement ps= con.prepareStatement(sql)) {
            ResultSet rs=ps.executeQuery();
            List<Funcionario>listaFuncionario= new ArrayList<>();

            while (rs.next()){
                Funcionario funcionario= new Funcionario();
                funcionario.setId_funcionario(rs.getInt(1));
                funcionario.setNome_funcionario(rs.getString(2));
                funcionario.setTipo_funcionario(rs.getString(3));
                funcionario.setEmail_funcionario(rs.getString(4));
                funcionario.setSenha_funcionario(rs.getString(5));

                listaFuncionario.add(funcionario);
            }
            return listaFuncionario;
        }
    }

    public void RemoverFuncionario(int id, String email_f, String s_f) {
        String sql = "DELETE FROM T_RHSTU_FUNCIONARIO WHERE id_funcionario=? AND ds_email_funcionario=?  AND ds_senha_funcionario=?";
        try (Connection con = dataSource.getConnection();
             PreparedStatement ps = con.prepareStatement(sql))
        {
            ps.setInt(1, id);
            ps.setString(2,email_f);
            ps.setString(3,s_f);

            ps.executeUpdate();

        }catch (SQLException e) {
            throw new RuntimeException("Erro de remover");
        }
    }

    public void updanteFuncionario(int id_funcionario, String nome_funcionario,String tipo_funcionario, String email_funcionario, String senha_funcionario){
        String sql="UPDATE T_RHSTU_FUNCIONARIO SET nm_funcionario= ?, tp_funcionario= ?, ds_email_funcionario= ?, ds_senha_funcionario= ?, WHERE id_funcionario= ?";
        try(Connection con= dataSource.getConnection();
            PreparedStatement ps= con.prepareStatement(sql)) {

            ps.setString(1,nome_funcionario);
            ps.setString(2,tipo_funcionario);
            ps.setString(3,email_funcionario);
            ps.setString(4,senha_funcionario);
            ps.setInt(5,id_funcionario);

            ps.executeUpdate();

        }catch (SQLException e){
            throw new RuntimeException(e);
        }
    }
}


